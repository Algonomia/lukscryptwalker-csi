{{- if .Values.secret.create }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.name }}
  namespace: {{ .Values.secret.namespace }}
  labels:
    {{- include "lukscryptwalker-csi.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.secret.passphrase }}
  {{ .Values.secret.passphraseKey }}: {{ .Values.secret.passphrase }}
  {{- else }}
  # Auto-generated passphrase (base64 encoded)
  {{ .Values.secret.passphraseKey }}: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
{{- end }}

{{- range .Values.storageClasses }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ .name }}
  labels:
    {{- include "lukscryptwalker-csi.labels" $ | nindent 4 }}
  {{- if .isDefault }}
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  {{- end }}
provisioner: {{ $.Values.csiDriver.name }}
parameters:
  # Local path where volumes will be stored
  local-path: {{ .localPath | default $.Values.storage.localPath | quote }}
  
  # LUKS encryption parameters
  csi.storage.k8s.io/node-stage-secret-name: {{ .secret.name | quote }}
  csi.storage.k8s.io/node-stage-secret-namespace: {{ .secret.namespace | quote }}
  
  # Key name within the secret that contains the passphrase
  passphraseKey: {{ .secret.passphraseKey | quote }}
  
  {{- if .fsGroup }}
  # Manual fsGroup override for this StorageClass
  fsGroup: {{ .fsGroup | quote }}
  {{- end }}

reclaimPolicy: {{ .reclaimPolicy | default "Delete" }}
allowVolumeExpansion: {{ .allowVolumeExpansion | default true }}
volumeBindingMode: {{ .volumeBindingMode | default "WaitForFirstConsumer" }}
{{- end }}